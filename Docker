Docker Commands and Usage :


docker image ls  >> lists all images


container represents running images 

docker container run ubuntu >> run the particular image of docker

docker container ls >> check which docker containers are running 

docker container ls -a >> check which docker containers are running/stopped
every container has container id 

nginx is webserver

docker container run --name pravesh-nginx -d -p 8080:80 nginx  

d >> background
p >> port 
8080 >> local machine (VM) port
80 >> nginx port
name >> gives the container your own name 

 curl localhost:8080  >> test the webserver running and communicating with 808 0port of VM


start/stop of container 

docker container stop <container-id>
docker container start <container-id>


remove docker container. The rm command will not remove the image.

docker container <container-id> -f  >> use -f is container is running else remove -f if container is stopped


Remove docker image
docker image rm <image-id>


Run the SQL image command: This will help to pass arguments to image.

to pass arguments while you run the container line params you pass -e in docker run command 

Ex: docker container  run --name pravesh-sql -e MYSQL_ROOT_PASSWORD=admin123 -d mysql:latest

CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                 NAMES
971eb704569d   mysql:latest   "docker-entrypoint.s…"   3 seconds ago   Up 2 seconds   3306/tcp, 33060/tcp   pravesh-sql
>> in port column, first port is of VM and second is container port
here 3306 of VM is mapped to 3306 of container

29beeb01a7c5   nginx          "/docker-entrypoint.…"   25 seconds ago   Up 22 seconds   0.0.0.0:8081->80/tcp, :::8081->80/tcp
>> here port of 8081VM is mapped to 80 port of container

to get all the informnation about docker container like volume mounts/ port/ CPU allocated : we use the followinf command :

docker inspect <conmtainer-id>

#how to login into container ? 

docker container run --name pravesh-it -it ubuntu bash

>> -it represents that it is interactive-terminal , ubuntu is image name, bash means i want to open bash of ubuntu

#exit of container / 

exit

#how to login to container that is already running
docker exec -it nginx-pravesh bash


how to look at logs generated by container
docker logs 29beeb01a7c5
docker logs <container-id>


run at the processes running inside the container

docker top <container-id>

look at resource utilisation by docker

docker stats <container-id>
=======================================================================================================

Docker file 
Steps to Build and deploy to dockers

1. Dockerise the application.
    1.1 Add Dockerfile
    1.2 Add instructiin in the dockerfile
    1.4 Docker build to create docker image
    1.5 Upload docker image to container registry

2. Run on kubernetes


Isntructions:
==============

Instructions of adding docker file. We can place the dockerfile or at place where all the project files are present.If it is placed somewhere else 
we use -f <path of Dockerfile>


FROM >> which image to use as baseline

RUN >> usewd to execute any comnand just like in ubuntu bash

RUN RUN mkdir -p /usr/src/app
ENV >> to pass any arguments params 
ENV <argument-name> <argument-value>
ENV PORT 8080

EXPOSE >> used to open the port
EXPOSE <ENV argument-name>
EXPOSE $PORT

VOLUME ["/app-data"]  >> used to store the contents of docker in local

CMD >> this run the container application once the container is built. 


now docker file is ready , we want to build it .
to build:  docker build -t my_prject:v1
-t >> tag of docker foloowed by project_name:version_of_project_name


docker login : 
=================


create repo kro hub mei jake and come back to terminal.Do this as first step
attach your image to this created repo .

docker tag <docker-image-name> <repository-name>
docker image ls  >> we will see two images of same size named repo-name and project-name
docker psuh <repository-name>

1.1 docker login
1.2 docker tag pravesh-app:v1 praveshrathee/firstproject
1.3 docker push praveshrathee/firstproject

